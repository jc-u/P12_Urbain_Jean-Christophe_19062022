{"version":3,"sources":["assets/icon1.svg","assets/icon2.svg","assets/icon3.svg","assets/icon4.svg","assets/logo.svg","assets/fat-icon.svg","assets/carbs-icon.svg","assets/calories-icon.svg","assets/protein-icon.svg","components/VerticalNav.tsx","components/HorizontalNav.tsx","pages/Home.tsx","API/HTTP.ts","API/Main.ts","API/Performance.ts","API/Activities.ts","API/Average.ts","components/BarGraph.tsx","components/LineGraph.tsx","components/RadarGraph.tsx","components/CircleGraph.tsx","components/Metric.tsx","components/UserMetrics.tsx","pages/Dashboard.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","VerticalNav","react_default","a","createElement","className","react_router_dom","to","src","Icon1","alt","Icon2","Icon3","Icon4","HorizontalNav","logo","Home","components_HorizontalNav","components_VerticalNav","HTTP","url","fetch","headers","Content-Type","Accept","then","response","json","data","console","log","catch","error","Main","id","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","get","concat","Performance","Activities","Average","CustomTooltip","_ref2","active","payload","label","value","Activity","_ref","sessions","day","length","dayStr","toString","push","kilogram","calories","ResponsiveContainer","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","tickMargin","tickSize","minTickGap","tickLine","padding","YAxis","yAxisId","domain","orientation","axisLine","tickCount","hide","Tooltip","content","BarGraph_CustomTooltip","Bar","name","fill","barSize","radius","LineGraph","weekDays","forEach","session","sessionLength","LineChart","stroke","fillOpacity","fontSize","cursor","strokeWidth","Line","type","dot","activeDot","r","strokeOpacity","Legend","verticalAlign","align","RadarGraph","Kind","chartData","map","performance","kind","RadarChart","cx","cy","outerRadius","PolarGrid","radialLines","PolarAngleAxis","Radar","CircleGraph","todayScore","score","uv","display","RadialBarChart","innerRadius","startAngle","endAngle","RadialBar","background","iconRef","Calories","CaloriesIcon","Glucides","GlucidesIcon","Lipides","LipidesIcon","Proteines","ProteinesIcon","Metric","unit","UserMetrics","keyData","metricsTable","metric","calorieCount","proteinCount","carbohydrateCount","lipidCount","object","components_Metric","key","Dashboard","useParams","numId","parseInt","_useState","useState","_useState2","slicedToArray","user","setUser","_useState3","_useState4","activity","setActivity","_useState5","_useState6","setPerformance","_useState7","_useState8","average","setAverage","useEffect","asyncToGenerator","Dashboard_regeneratorRuntime","mark","_callee","main","userMain","userPerformance","userActivity","userAverage","wrap","_context","prev","next","getMain","sent","getPerformance","getActivity","getAverage","stop","userInfos","firstName","BarGraph","components_LineGraph","components_RadarGraph","components_CircleGraph","components_UserMetrics","App","react_router","path","element","pages_Home","pages_Dashboard","container","document","getElementById","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.95aad411.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon1.9194b5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon2.15bda523.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon3.f60d29ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon4.676e3f7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.606a97bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/fat-icon.6e4294b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/carbs-icon.b6097cee.svg\";","module.exports = __webpack_public_path__ + \"static/media/calories-icon.fec6c310.svg\";","module.exports = __webpack_public_path__ + \"static/media/protein-icon.882174f3.svg\";","import React, { FC } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Icon1 from '../assets/icon1.svg'\r\nimport Icon2 from '../assets/icon2.svg'\r\nimport Icon3 from '../assets/icon3.svg'\r\nimport Icon4 from '../assets/icon4.svg'\r\n\r\n/**\r\n * HorizontalNav componant\r\n * @returns {JSX}\r\n */\r\n\r\nconst VerticalNav: FC = () => {\r\n  return (\r\n        <div className=\"vertical__nav\">\r\n          <Link to='#'>\r\n            <img src={Icon1} className='nav-icon' alt=\"Lien Méditation\"/>\r\n          </Link>\r\n          <Link to='#'>\r\n            <img src={Icon2} className='nav-icon' alt=\"Lien Natation\"/>\r\n          </Link>\r\n          <Link to='#'>\r\n            <img src={Icon3} className='nav-icon' alt=\"Lien Cyclisme\"/>\r\n          </Link>\r\n          <Link to='#'>\r\n            <img src={Icon4} className='nav-icon' alt=\"Lien Musculation\"/>\r\n          </Link>\r\n          <div className='copyright'>\r\n            Copyright, Sportsee 2020\r\n          </div>\r\n        </div>\r\n\r\n  )\r\n}\r\n\r\nexport default VerticalNav","\r\nimport React, { FC } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../assets/logo.svg'\r\n\r\n/**\r\n * HorizontalNav componant\r\n * @returns {JSX}\r\n */\r\n\r\nconst HorizontalNav: FC = () => {\r\n  return (\r\n        <div className=\"horizontal__nav\">\r\n          <Link className=\"logo\" to=\"/\"><img src={logo} alt=\"Logo SportSee\"  /></Link>\r\n            <Link className=\"nav-link\" to=\"/\">Accueil</Link>\r\n            <Link className=\"nav-link\" to=\"#\">Profil</Link>\r\n            <Link className=\"nav-link\" to=\"#\">Réglage</Link>\r\n            <Link className=\"nav-link\" to=\"#\">Communauté</Link>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalNav","import React, { FC } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport VerticalNav from '../components/VerticalNav';\r\nimport HorizontalNav from '../components/HorizontalNav';\r\n\r\n/**\r\n * Home page\r\n * @returns {JSX}\r\n */\r\nconst Home: FC = () => {\r\n  return (\r\n        <div className=\"home\">\r\n          <HorizontalNav/>\r\n          <div className=\"home__container\">\r\n            <VerticalNav />\r\n            <div className=\"connect\">\r\n            <div>Se connecter en tant que</div>\r\n              <Link to=\"/user/12\">Karl Dovineau </Link>\r\n              <Link to=\"/user/18\">Cecilia Ratorez </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Home","/* A class that is used to fetch data from an API. */\r\n\r\nabstract class HTTP <T> {\r\n  protected async get(url: string): Promise<T> {\r\n    return fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {console.log(data)\r\n        return data.data\r\n      })\r\n      .catch(error => console.log(\"Erreur : \" + error));\r\n  }\r\n}\r\n\r\nexport default HTTP\r\n\r\n","import { IMain } from '../types'\r\nimport HTTP from './HTTP'\r\n\r\n/* The class Main extends the HTTP class and implements the IMain interface */\r\nclass Main extends HTTP<IMain> {\r\n    id: number\r\n    constructor(id: number) {\r\n      super()\r\n      this.id = id\r\n    }\r\n\r\n  public async getMain() {\r\n     return this.get(`http://localhost:3000/user/${this.id}`)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Main","import { IPerformance } from '../types'\r\nimport HTTP from './HTTP'\r\n\r\n/* It's a class that extends the HTTP class and implements the IPerformance interface */\r\nclass Performance extends HTTP<IPerformance> {\r\n    id: number\r\n    constructor(id: number) {\r\n      super()\r\n      this.id = id\r\n    }\r\n\r\n  public getPerformance() {\r\n   return this.get(`http://localhost:3000/user/${this.id}/performance`)\r\n  }\r\n}\r\n\r\nexport default Performance","import { IActivities } from '../types'\r\nimport HTTP from './HTTP'\r\n\r\n/* It's a class that extends the HTTP class and implements the IActivities interface. */\r\nclass Activities extends HTTP<IActivities> {\r\n    id: number\r\n    constructor(id: number) {\r\n      super()\r\n      this.id = id\r\n    }\r\n\r\n  public getActivity() {\r\n   return this.get(`http://localhost:3000/user/${this.id}/activity`)\r\n  }\r\n}\r\n\r\nexport default Activities","import { IAverage } from '../types'\r\nimport HTTP from './HTTP'\r\n\r\n/* The Average class extends the HTTP class and implements the IAverage interface */\r\nclass Average extends HTTP<IAverage> {\r\n    id: number\r\n    constructor(id: number) {\r\n      super()\r\n      this.id = id\r\n    }\r\n\r\n  public getAverage() {\r\n   return this.get(`http://localhost:3000/user/${this.id}/average-sessions`)\r\n  }\r\n}\r\n\r\nexport default Average","import React, { FC } from 'react'\r\nimport IBarGraph from '../lib/IBarGraph'\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\r\n\r\ntype Payload = number[][]\r\n\r\n/**\r\n * @category Activity component\r\n * @param {Object} sessions\r\n * @returns {JSX}\r\n*/\r\nconst Activity: FC<IBarGraph> = ({ sessions }: IBarGraph) => {\r\n  const data = []\r\n  const payload: Payload = [[], []]\r\n\r\n  /* Creating an array of objects with the following structure:\r\n  [{day: '1', kilogram: '1', calories: '1'}, {day: '2', kilogram: '2', calories: '2'}, {day: '3',\r\n  kilogram: '3', calories: '3'}] */\r\n  for (let day = 0; day < sessions.length; day++) {\r\n    const dayStr = (day + 1).toString()\r\n    data.push({\r\n      day: dayStr,\r\n      kilogram: sessions[day].kilogram,\r\n      calories: sessions[day].calories\r\n    })\r\n    payload[0].push(sessions[day].kilogram)\r\n    payload[1].push(sessions[day].calories)\r\n  }\r\n\r\n  return (\r\n    <div className='chart__bargraph'>\r\n    <div className='chart__bargraph__legend'>\r\n      <div className='chart__bargraph__legend--title'> Activité quotidienne</div>\r\n      <div className='chart__bargraph__legend__values'>\r\n      <ul className='chart__bargraph__legend__values--ul'>\r\n        <li className='chart__bargraph__legend--weight'>Poids (kg)</li>\r\n        <li className='chart__bargraph__legend--cal'>Calories brûlées (kCal)</li>\r\n      </ul>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <ResponsiveContainer>\r\n      <BarChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 40,\r\n          right: 0,\r\n          left: 40,\r\n          bottom: 80\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n        <XAxis dataKey=\"day\"\r\n          tickMargin={20}\r\n          tickSize={0}\r\n          minTickGap={30}\r\n          tickLine={false}\r\n          padding={{ left: -50, right: -50 }}/>\r\n          \r\n        <YAxis\r\n        yAxisId='weight'\r\n        domain={['dataMin-1', 'dataMax+2']}\r\n        orientation='right'\r\n        axisLine={false}\r\n        tickLine={false}\r\n        tickMargin={20}\r\n        tickCount={3}\r\n        />\r\n        <YAxis\r\n        yAxisId='calories'\r\n        axisLine={false}\r\n        tickLine={false}\r\n        hide/>\r\n\r\n        <Tooltip content={(data: any) => <CustomTooltip active={data.active} payload={data.payload} label={data.label} />}/>\r\n        <Bar\r\n        yAxisId=\"weight\"\r\n          dataKey=\"kilogram\"\r\n          name=\"Poids(kg)\"\r\n          fill=\"#282D30\"\r\n          barSize={7}\r\n          radius={[5, 5, 0, 0]}/>\r\n          \r\n        <Bar\r\n          yAxisId=\"calories\"\r\n          dataKey=\"calories\"\r\n          name=\"Calories brûlées (kCal)\"\r\n          fill=\"#E60000\"\r\n          barSize={7}\r\n          radius={[5, 5, 0, 0]}/>\r\n      </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * If the active prop is true, return a div with two divs inside it. If the active prop is false,\r\n * return null\r\n * @param {any}  - active - boolean, whether the tooltip is active or not\r\n */\r\n\r\nconst CustomTooltip = ({ active, payload, label }: any) => active\r\n  ? (\r\n  <div className=\"bargraph__chart__tooltip\">\r\n      <div>{payload[0].value}kg</div>\r\n      <div>{payload[1].value}kCal</div>\r\n  </div>\r\n    )\r\n  : null\r\n\r\nexport default Activity","import React, { FC } from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts'\r\nimport ILineGraph from './../lib/ILineGraph';\r\n\r\ntype SessionObject = {\r\n  name: string,\r\n  sessionLength: number\r\n}\r\n\r\n/**\r\n * LineGraph component\r\n * @param {Object} sessions\r\n * @returns {JSX}\r\n */\r\nconst LineGraph: FC<ILineGraph> = ({ sessions }: ILineGraph) => {\r\n  const weekDays = ['L', 'M', 'M', 'J', 'V', 'S', 'D']\r\n  const data: SessionObject[] = []\r\n  sessions.forEach(session => {\r\n    data.push({\r\n      name: weekDays[session.day - 1],\r\n      sessionLength: session.sessionLength\r\n    })\r\n  }\r\n  )\r\n  const LineGraphTitle = () => {\r\n    return (\r\n      <div className=\"linegraph__title\">Durée moyenne des sessions</div>\r\n    )\r\n  }\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"linegraph__custom--tooltip\">\r\n          <p className=\"label\">{`${payload[0].value} min`}</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  const CustomHover = ({position}: any) => {\r\n    console.log(position)\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className='chart__linegraph'>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n        width={500}\r\n        height={250}\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 20,\r\n          left: 20,\r\n          bottom: 12\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\"\r\n          tickMargin={0}\r\n          padding={{ left: 0, right: 0 }}\r\n          axisLine={false}\r\n          tickLine={false}\r\n          stroke=\"#ffffff\"\r\n          fillOpacity={0.5}\r\n          fontSize={12}\r\n          />\r\n        <YAxis hide={true} domain={[0, 130]}/>\r\n        <Tooltip content={(data: any) => <CustomTooltip active={data.active} payload={data.payload} label={data.label}  />} cursor={{ stroke: \"rgba(0, 0, 0, 0.1)\", strokeWidth: 40 }} />\r\n        <Line\r\n          type=\"natural\"\r\n          dataKey=\"sessionLength\"\r\n          stroke=\"#ffffff\"\r\n          strokeWidth={2}\r\n          dot={false}\r\n          activeDot={{ \r\n          fill: \"#ffffff\",\r\n          r: 3.5,\r\n          strokeWidth: 8,\r\n          strokeOpacity: \"0.3\",\r\n          fillOpacity: \"1\", }}\r\n\r\n        />\r\n        <Legend verticalAlign='top' align='left' content={LineGraphTitle}/>\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph","import React from 'react'\r\nimport { ResponsiveContainer, Radar, RadarChart, PolarGrid, PolarAngleAxis } from 'recharts'\r\nimport IRadarGraph from '../lib/IRadarGraph'\r\n\r\n/**\r\n * RadarGraph component\r\n * @param {Array} data \r\n * @returns {JSX}\r\n */\r\nconst RadarGraph: React.FC<IRadarGraph> = ({ data }: IRadarGraph) => {\r\n\r\n  enum Kind {\r\n    'Cardio' = 1,\r\n    'Energie',\r\n    'Endurance',\r\n    'Force',\r\n    'Vitesse',\r\n    'Intensité'\r\n  }\r\n\r\n /* It's a map function that takes the data from the props and maps it to a new array. */\r\n  const chartData = data.map(performance => {\r\n    return {\r\n      value: performance.value,\r\n      kind: Kind[performance.kind]\r\n    }\r\n  })\r\n\r\n  return (\r\n  <div className='chart__radargraph'>\r\n    <ResponsiveContainer>\r\n      <RadarChart\r\n        cx='50%'\r\n        cy='50%'\r\n        outerRadius={70}\r\n        width={300}\r\n        height={300}\r\n        data={chartData}\r\n      >\r\n        <PolarGrid radialLines={false} stroke='#ffffff'/>\r\n        <PolarAngleAxis dataKey=\"kind\"/>\r\n\r\n        <Radar\r\n          dataKey=\"value\"\r\n          stroke=\"#ff0000\"\r\n          fill=\"#ff0000\"\r\n          fillOpacity={0.6}\r\n        />\r\n      </RadarChart>\r\n    </ResponsiveContainer>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RadarGraph","import React, { FC } from 'react'\r\nimport { RadialBarChart, RadialBar, ResponsiveContainer, Legend } from 'recharts'\r\n\r\ninterface ICircleGraph {\r\n  todayScore: number\r\n  score: number\r\n}\r\n\r\n/**\r\n * CircleGraph\r\n * @param {Object} todayScore\r\n * @returns {JSX}\r\n */\r\nconst CircleGraph: FC<ICircleGraph> = ({ todayScore, score }: ICircleGraph) => {\r\n  const data = [\r\n    {\r\n      uv: 100,\r\n      display: 'none'\r\n    },\r\n    {\r\n      uv: todayScore * 100 || score * 100,\r\n      fill: '#ff0000'\r\n    }\r\n  ]\r\n\r\n  const CircleGraphLegend = () => {\r\n    return (\r\n      <div className=\"circlegraph__legend\">\r\n        <div className=\"circlegraph__legend--graph\">{todayScore * 100 || score * 100}%</div>\r\n        <div className=\"circlegraph__legend--text\">de votre objectif</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart__circlegraph\">\r\n      <div className='circlegraph__title'>Score</div>\r\n      <div className='circlegraph__background'>\r\n      <ResponsiveContainer>\r\n        <RadialBarChart\r\n          data={data}\r\n          barSize={10}\r\n          innerRadius=\"0%\"\r\n          outerRadius=\"202%\"\r\n          startAngle={210}\r\n          endAngle={-150}\r\n        >\r\n          <RadialBar\r\n            background={{ fill: '#fbfbfb' }}\r\n            dataKey=\"uv\"\r\n          />\r\n          <Legend verticalAlign='middle' align='center' content={CircleGraphLegend}/>\r\n\r\n        </RadialBarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default CircleGraph","import React, { FC } from 'react'\r\nimport CaloriesIcon from '../assets/calories-icon.svg'\r\nimport GlucidesIcon from '../assets/carbs-icon.svg'\r\nimport ProteinesIcon from '../assets/protein-icon.svg'\r\nimport LipidesIcon from '../assets/fat-icon.svg'\r\n\r\ninterface IMetric {\r\n    value: number\r\n    name: string\r\n    unit: string\r\n}\r\n\r\ninterface IIconRef {\r\n    [key: string]: string\r\n}\r\n\r\nconst iconRef: IIconRef = {\r\n  Calories: CaloriesIcon,\r\n  Glucides: GlucidesIcon,\r\n  Lipides: LipidesIcon,\r\n  Proteines: ProteinesIcon\r\n}\r\n\r\n/**\r\n * Metric component\r\n * @param {string} name\r\n * @param {number} value\r\n * @param {string} unit\r\n * @returns {JSX}\r\n */\r\nconst Metric: FC <IMetric> = ({ value, name, unit }:IMetric) => {\r\n  return (\r\n    <div className='metric'>\r\n      <img className='metric-icon' src={iconRef[name]} alt={`${name} icone`} />\r\n      <div className='metric-data'>\r\n        <span className='metric-value'>{value}{unit}</span>\r\n        <br/>\r\n        <span className='metric-type'>{name}</span>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Metric","import React, { FC } from 'react'\r\nimport Metric from './Metric'\r\nimport IUserMetrics from '../lib/IUserMetrics'\r\n\r\n/**\r\n *\r\n * @param object\r\n * @returns {JSX}\r\n */\r\nconst UserMetrics: FC<IUserMetrics> = ({ keyData }: IUserMetrics) => {\r\n  const metricsTable = [\r\n    {\r\n      metric: 'Calories',\r\n      unit: 'kCal',\r\n      value: keyData.calorieCount\r\n    },\r\n    {\r\n      metric: 'Proteines',\r\n      unit: 'g',\r\n      value: keyData.proteinCount\r\n    },\r\n    {\r\n      metric: 'Glucides',\r\n      unit: 'g',\r\n      value: keyData.carbohydrateCount\r\n    },\r\n    {\r\n      metric: 'Lipides',\r\n      unit: 'g',\r\n      value: keyData.lipidCount\r\n    }\r\n  ]\r\n\r\n  return (\r\n        <div className=\"chart__metrics\">\r\n          {\r\n            metricsTable.map(object => {\r\n              return <Metric key={object.metric} value={object.value} name={object.metric} unit={object.unit}/>\r\n            })\r\n          }\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default UserMetrics","import React, { FC, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IMain } from '../types'\r\nimport Main from '../API/Main'\r\nimport { IPerformance } from '../types'\r\nimport Performance from '../API/Performance'\r\nimport { IActivities } from '../types'\r\nimport Activities from '../API/Activities'\r\nimport { IAverage } from '../types'\r\nimport Average from '../API/Average'\r\nimport BarGraph from '../components/BarGraph'\r\nimport LineGraph from '../components/LineGraph'\r\nimport RadarGraph from '../components/RadarGraph'\r\nimport CircleGraph from '../components/CircleGraph'\r\nimport UserMetrics from '../components/UserMetrics'\r\nimport HorizontalNav from '../components/HorizontalNav'\r\nimport VerticalNav from '../components/VerticalNav'\r\n\r\n/**\r\n * UserPage page\r\n * @returns {JSX}\r\n */\r\n /* Using the useEffect hook to call the Main, Performance, Activity, and Average classes. */\r\n const Dashboard: FC = () => {\r\n /* Getting the id from the url. */\r\n  const { id }:any = useParams()\r\n  \r\n/* This is the useState hook. It is used to store the data that is returned from the API calls. */\r\n  const numId = parseInt(id)\r\n  const [user, setUser] = useState<IMain>()\r\n  const [activity, setActivity] = useState<IActivities>()\r\n  const [performance, setPerformance] = useState<IPerformance>()\r\n  const [average, setAverage] = useState<IAverage>()\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      const main = new Main(numId)\r\n      const performance = new Performance(numId)\r\n      const activity = new Activities(numId)\r\n      const average = new Average(numId)\r\n\r\n      const userMain = await main.getMain()\r\n      const userPerformance = await performance.getPerformance()\r\n      const userActivity = await activity.getActivity()\r\n      const userAverage = await average.getAverage()\r\n\r\n      setUser(userMain)\r\n      setPerformance(userPerformance)\r\n      setActivity(userActivity)\r\n      setAverage(userAverage)\r\n    })()\r\n  }\r\n  , [numId])\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {<HorizontalNav/>}\r\n      <div className=\"dashboard__main\">\r\n        {<VerticalNav />}\r\n        <div className=\"dashboard__container\">\r\n          {user && <h1 className=\"welcome\">Bonjour <span className=\"user__name\">{user.userInfos.firstName}</span></h1>}\r\n        <span> Félicitations ! Vous avez explosé vos objectifs hier 👏</span>\r\n          <div className=\"dashboard__charts\">\r\n            {activity && <BarGraph sessions={activity.sessions}/>}\r\n            {average && <LineGraph sessions={average.sessions}/>}\r\n            {performance && <RadarGraph data={performance.data} kind={performance.kind}/>}\r\n            {user && <CircleGraph todayScore={user.todayScore} score={user.score}/>}\r\n            {user && <UserMetrics keyData={user.keyData}/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n }\r\n\r\n export default Dashboard","import React, { FC } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Dashboard from './pages/Dashboard'\n\nconst App: FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />}/>\n          <Route path=\"/user/:id\" element={<Dashboard />} />\n        </Routes>\n      </Router>\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { createRoot } from 'react-dom/client';\nimport App from './App'\nimport '../src/styles/main.css'\n\nconst container =   document.getElementById('root')\nconst root = createRoot(container!)\n\nroot.render(<App />);"],"sourceRoot":""}